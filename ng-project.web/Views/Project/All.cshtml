@using ng_project.Entities;
@using ng_project.Services;
@inject ng_project.Services.IProjectTypeService projectTypeService;
@inject ng_project.Services.IProjectSubTypeService projectSubTypeService;

@model List<Project>
@{
	var projectTypes = projectTypeService.FindAll().ToList();
	var projectSubType = new List<List<ProjectSubType>>();
	var indexProjType = 0;
}
<link rel="stylesheet" href="~/css/Project.css" />
<div class="container-fluid pl-5 pr-5">
	<div class="project-type">
		<div class="d-flex flex-nowrap">
			@foreach (var item in projectTypes)
			{
				<div class="project-type-item" id="project_type_@(item.Id)" onclick="loadSubType(@(item.Id),@(indexProjType++))">
					<div class="icon">
						<img src="~/images/icon/@(item.IconName).png" />
					</div>
					<div class="text">
						@(item.Name)
					</div>
				</div>
			}
		</div>
	</div>

	<div class="project-sub-type mt-4">
		<div class="d-flex flex-nowrap">
			@foreach (var subTypeItem in projectTypes[0].ProjectSubType)
			{
				<div class="project-type-item">
					<div class="text">
						@(subTypeItem.Name)
					</div>
				</div>
			}

		</div>
	</div>
</div>
<div class="container-fluid mt-4 pl-5 pr-5">
	<div class="row project-items-block">
	</div>
</div>
<script>
	$(document).ready(function ()
	{
		ShowLoader();
		$('.project-type-item:first').addClass("select")
		$.ajax({
			type: 'GET',
			url: '@Url.Action("GetSubTypes","Project")',
			data: { projectTypeId:@(projectTypes[0].Id) },
			success: function (data) {
				let blockSubType = $('.project-sub-type');
				blockSubType.empty();
				blockSubType.append(data.value);
				$('.project_sub_type:eq(0)').addClass('select');
				var subTypeId = $('.project_sub_type:first input[name="project_sub_type_id"]').val();
				$.ajax({
					type: 'GET',
					url: '@Url.Action("GetProjects","Project")',
					data: { projectTypeId:@(projectTypes[0].Id), projectSubType: subTypeId },
					success: function (data) {
						let projectItemsBlock = $('.project-items-block');
						projectItemsBlock.empty();
						projectItemsBlock.append(data.value);
						HideLoader();
					}
				})
			}
		})
	})
	function loadSubType(projectTypesId,index) {

		debugger;
		$('.project-type-item').removeClass("select")
		$('.project-type-item:eq('+index+')').addClass("select")
		$.ajax({
			type: 'GET',
			url: '@Url.Action("GetSubTypes","Project")',
			data: { projectTypeId:projectTypesId },
			success: function (data) {
				let blockSubType = $('.project-sub-type');
				blockSubType.empty();
				blockSubType.append(data.value);
				$('.project_sub_type:eq(0)').addClass('select');
				var subTypeId = $('.project_sub_type:first input[name="project_sub_type_id"]').val();
				$.ajax({
					type: 'GET',
					url: '@Url.Action("GetProjects","Project")',
					data: { projectTypeId:projectTypesId, projectSubType: subTypeId },
					success: function (data) {
						debugger;
						let projectItemsBlock = $('.project-items-block');
						projectItemsBlock.empty();
						projectItemsBlock.append(data.value);
						HideLoader();
					}
				})
			}
		})
	}
	function loadProject(projectTypeId, subTypeId,index) {
		$('.project_sub_type').removeClass('select');
		$('.project_sub_type:eq('+index+')').addClass('select');
		$.ajax({
			type: 'GET',
			url: '@Url.Action("GetProjects","Project")',
			data: { projectTypeId:projectTypeId, projectSubType: subTypeId },
			success: function (data) {
				let projectItemsBlock = $('.project-items-block');
				projectItemsBlock.empty();
				projectItemsBlock.append(data.value);
				HideLoader();
			}
		})
	}


</script>